import jenkins.*
import jenkins.model.*
import hudson.*
import hudson.model.*

import hudson.scm.*
import hudson.tasks.*
import com.cloudbees.hudson.plugins.folder.*

/*void processJob(Item job){
  if (job.name ==~ /.*None$/){
    println job.name
  }
}

void processFolder(Item folder){
    folder.getItems().each{
        println("Folder: ${folder.name}")
        if(it instanceof Folder){
            processFolder(it)
        }else{
            processJob(it)
        }
    }
}*/

def getRemoteBranches(url)
{
	def cmd = "git ls-remote ${url} refs/heads/*"
	def output = cmd.execute().text.trim()
	def result = []
	//print("Output raw: ${output}")
	def output_lines = output.split('\n')
	//print ("Output Lines: ${output_lines}")
	output_lines.each { line ->
		//print("Line: ${line}")
		def line_split = line.split('\t')
		//print("Line Split: ${line_split}")

		if (line_split.size() == 2)
		{
			def ref_name =line_split[1]
			def ref_name_split = ref_name.split('/')
			//print("Ref Name Split: ${ref_name_split}")
			if (ref_name_split.size() == 3)
			{
				result.add(ref_name_split[2])
			}

		}
	}
	return result
}

node ()
{
    stage ('ENV Dump')
    {
        sh('env | sort -n')
        print("Params: ${params}")
    }

    stage('Cleanup')
    {
        def active_branches = getRemoteBranches("${REPO_URL}")
        print ("Active Branches: ${active_branches}")

        def jen = Jenkins.instance
        def root = jen.getItemByFullName("${JOB_ROOT}", Folder)
        //print("root: ${root}")

        def all_root_items = root.getItems()
        //print("All Top level Jobs: ${all_root_items}")

        def delete_list = []

        all_root_items.each {
            if(it instanceof Folder){
                print("Folder: ${it.name}")
                if (active_branches.contains(it.name) == false)
                {
                    print("Branch(${it.name}) is marked as inactive - deleting")
                    delete_list.add(it)
                }
            }
        }

       print("Final Delete List: ${delete_list}")
        /*jen.getItems().each{
            if(it instanceof Folder){
                processFolder(it)
            }else{
                processJob(it)
            }
        }*/
    }

}
